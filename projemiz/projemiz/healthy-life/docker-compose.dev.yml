version: '3.8'

services:
  app:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/healthylife
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - REDIS_HOST=redis
      - ELASTICSEARCH_HOST=elasticsearch
    depends_on:
      - db
      - redis
      - elasticsearch
    volumes:
      - ./backend:/app
      - ~/.m2:/root/.m2

  db:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=healthylife
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.7.0
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:8.7.0
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch

  backup:
    image: alpine:latest
    volumes:
      - postgres_data:/backup/postgres
      - redis_data:/backup/redis
      - elasticsearch_data:/backup/elasticsearch
      - ./backup:/backup/output
    command: |
      sh -c 'while true; do
        tar czf /backup/output/backup-$$(date +%Y%m%d-%H%M%S).tar.gz /backup/postgres /backup/redis /backup/elasticsearch;
        sleep 86400;
      done'

volumes:
  postgres_data:
  redis_data:
  elasticsearch_data: 